<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Style x:Key="KeypadButtonStyle" TargetType="Button">
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Background" Value="Black"/>
        <Setter Property="BorderBrush" Value="Gray"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Width" Value="60"/>
        <Setter Property="Height" Value="60"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                         BorderBrush="{TemplateBinding BorderBrush}"
                         BorderThickness="{TemplateBinding BorderThickness}"
                         CornerRadius="5">
                        <ContentPresenter HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       Content="{TemplateBinding Content}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="PrimaryButton" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource PrimaryBlueColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource TertiaryWhiteColor}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="12 6 12 6"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="FontFamily" Value="Poppins"/>
        <Setter Property="MaxHeight" Value="40"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="btnBorder"
                            CornerRadius="5"
                            Background="{TemplateBinding Background}"
                            Width="{TemplateBinding Width}"
                            Height="{TemplateBinding MaxHeight}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True"
                            Padding="{TemplateBinding Padding}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="20"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Path x:Name="Icon" Data="{DynamicResource moon}"
                                Fill="{DynamicResource TertiaryWhiteColor}"
                                Height="16"
                                Width="16"
                                Stretch="UniformToFill"/>
                            <ContentPresenter Grid.Column="1" x:Name="ContentPresenter"
                                          Focusable="False"
                                          HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                          SnapsToDevicePixels="True"
                                          Margin="{TemplateBinding Padding}"
                                          RecognizesAccessKey="True"/>
                            
                        </Grid>
                        

                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="btnBorder" Property="Background" Value="{DynamicResource SecundaryBlueColor}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="btnBorder" Property="Background" Value="{DynamicResource SecundaryBackgroundColor}"/>
                            <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}"/>
                            <Setter TargetName="Icon" Property="Fill" Value="{DynamicResource PrimaryTextColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                    
                </ControlTemplate>
                
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="LoginButton" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource PrimaryBlueColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource TertiaryWhiteColor}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="12 6 12 6"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="FontFamily" Value="Poppins"/>
        <Setter Property="MaxHeight" Value="40"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="btnBorder"
                            CornerRadius="5"
                            Background="{TemplateBinding Background}"
                            Width="{TemplateBinding Width}"
                            Height="{TemplateBinding MaxHeight}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True"
                            Padding="{TemplateBinding Padding}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="20"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Path x:Name="Icon" Data="{DynamicResource Login}"
                                Fill="{DynamicResource TertiaryWhiteColor}"
                                Height="16"
                                Width="16"
                                Stretch="UniformToFill"/>
                            <ContentPresenter Grid.Column="1" x:Name="ContentPresenter"
                                          Focusable="False"
                                          HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                          SnapsToDevicePixels="True"
                                          Margin="{TemplateBinding Padding}"
                                          RecognizesAccessKey="True"/>

                        </Grid>


                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="btnBorder" Property="Background" Value="{DynamicResource SecundaryBlueColor}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="btnBorder" Property="Background" Value="{DynamicResource TertiaryBlueColor}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="btnBorder" Property="Background" Value="{DynamicResource SecundaryBackgroundColor}"/>
                            <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}"/>
                            <Setter TargetName="Icon" Property="Fill" Value="{DynamicResource PrimaryTextColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>

            </Setter.Value>
        </Setter>
    </Style>
    
    

    <Style x:Key="CreateButton" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource PrimaryGreenColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource TertiaryWhiteColor}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="12 6 12 6"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="FontFamily" Value="Poppins"/>
        <Setter Property="MaxHeight" Value="40"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="btnBorder"
                        CornerRadius="5"
                        Background="{TemplateBinding Background}"
                        Width="{TemplateBinding Width}"
                        Height="{TemplateBinding MaxHeight}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="True"
                        Padding="{TemplateBinding Padding}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="20"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Path x:Name="Icon" Data="{DynamicResource Create}"
                            Fill="{DynamicResource TertiaryWhiteColor}"
                            Height="16"
                            Width="16"
                            Stretch="UniformToFill"/>
                            <ContentPresenter Grid.Column="1" x:Name="ContentPresenter"
                                      Focusable="False"
                                      HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                      VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                      SnapsToDevicePixels="True"
                                      Margin="{TemplateBinding Padding}"
                                      RecognizesAccessKey="True"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="btnBorder" Property="Background" Value="{DynamicResource SecundaryGreenColor}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="btnBorder" Property="Background" Value="{DynamicResource SecundaryBackgroundColor}"/>
                            <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}"/>
                            <Setter TargetName="Icon" Property="Fill" Value="{DynamicResource PrimaryTextColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>

            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CancelButton" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource PrimaryYellowColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource TertiaryWhiteColor}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="12 6 12 6"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="FontFamily" Value="Poppins"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="btnBorder"
                        CornerRadius="5"
                        Background="{TemplateBinding Background}"
                        Width="{TemplateBinding Width}"
                        Height="{TemplateBinding Height}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="True"
                        Padding="{TemplateBinding Padding}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="20"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Path x:Name="Icon" Data="{DynamicResource close}"
                            Fill="{DynamicResource TertiaryWhiteColor}"
                            Height="16"
                            Width="16"
                            Stretch="UniformToFill"/>
                            <ContentPresenter Grid.Column="1" x:Name="ContentPresenter"
                                      Focusable="False"
                                      HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                      VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                      SnapsToDevicePixels="True"
                                      Margin="{TemplateBinding Padding}"
                                      RecognizesAccessKey="True"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="btnBorder" Property="Background" Value="{DynamicResource SecundaryYellowColor}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="btnBorder" Property="Background" Value="{DynamicResource SecundaryBackgroundColor}"/>
                            <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}"/>
                            <Setter TargetName="Icon" Property="Fill" Value="{DynamicResource PrimaryTextColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>

            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SaveButton" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource PrimaryGreenColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource TertiaryWhiteColor}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="12 6 12 6"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="FontFamily" Value="Poppins"/>
        <Setter Property="MaxHeight" Value="40"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="btnBorder"
                        CornerRadius="5"
                        Background="{TemplateBinding Background}"
                        Width="{TemplateBinding Width}"
                        Height="{TemplateBinding MaxHeight}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="True"
                        Padding="{TemplateBinding Padding}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="20"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Path x:Name="Icon" Data="{DynamicResource File-Save}"
                            Fill="{DynamicResource TertiaryWhiteColor}"
                            Height="16"
                            Width="16"
                            Stretch="UniformToFill"/>
                            <ContentPresenter Grid.Column="1" x:Name="ContentPresenter"
                                      Focusable="False"
                                      HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                      VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                      SnapsToDevicePixels="True"
                                      Margin="{TemplateBinding Padding}"
                                      RecognizesAccessKey="True"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="btnBorder" Property="Background" Value="{DynamicResource SecundaryGreenColor}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="btnBorder" Property="Background" Value="{DynamicResource SecundaryBackgroundColor}"/>
                            <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}"/>
                            <Setter TargetName="Icon" Property="Fill" Value="{DynamicResource PrimaryTextColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>

            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SuccessButton" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource PrimaryGreenColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource TertiaryWhiteColor}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="12 6 12 6"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="FontFamily" Value="Poppins"/>
        <Setter Property="MaxHeight" Value="40"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="btnBorder"
                    CornerRadius="5"
                    Background="{TemplateBinding Background}"
                    Width="{TemplateBinding Width}"
                    Height="{TemplateBinding MaxHeight}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    SnapsToDevicePixels="True"
                    Padding="{TemplateBinding Padding}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="20"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Path x:Name="Icon" Data="{DynamicResource Check}"
                        Fill="{DynamicResource TertiaryWhiteColor}"
                        Height="16"
                        Width="16"
                        Stretch="UniformToFill"/>
                            <ContentPresenter Grid.Column="1" x:Name="ContentPresenter"
                                  Focusable="False"
                                  HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                  VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                  SnapsToDevicePixels="True"
                                  Margin="{TemplateBinding Padding}"
                                  RecognizesAccessKey="True"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="btnBorder" Property="Background" Value="{DynamicResource SecundaryGreenColor}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="btnBorder" Property="Background" Value="{DynamicResource SecundaryBackgroundColor}"/>
                            <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}"/>
                            <Setter TargetName="Icon" Property="Fill" Value="{DynamicResource PrimaryTextColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>

            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="ExitButton" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource PrimaryRedColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource TertiaryWhiteColor}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="12 6 12 6"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="FontFamily" Value="Poppins"/>
        <Setter Property="MaxHeight" Value="40"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="btnBorder"
                            CornerRadius="5"
                            Background="{TemplateBinding Background}"
                            Width="{TemplateBinding Width}"
                            Height="{TemplateBinding MaxHeight}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True"
                            Padding="{TemplateBinding Padding}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="20"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Path x:Name="Icon" Data="{DynamicResource Exit}"
                                Fill="{DynamicResource TertiaryWhiteColor}"
                                Height="16"
                                Width="16"
                                Stretch="UniformToFill"/>
                            <ContentPresenter Grid.Column="1" x:Name="ContentPresenter"
                                          Focusable="False"
                                          HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                          SnapsToDevicePixels="True"
                                          Margin="{TemplateBinding Padding}"
                                          RecognizesAccessKey="True"/>

                        </Grid>

                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="btnBorder" Property="Background" Value="{DynamicResource SecundaryRedColor}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="btnBorder" Property="Background" Value="{DynamicResource SecundaryBackgroundColor}"/>
                            <Setter  Property="Foreground" Value="{DynamicResource PrimaryTextColor}"/>
                            <Setter  TargetName="Icon" Property="Fill" Value="{DynamicResource PrimaryTextColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>

            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="IconButton" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource PrimaryBlueColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource TertiaryWhiteColor}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="12 6 12 6"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="FontFamily" Value="Poppins"/>
        <Setter Property="MaxHeight" Value="40"/>
        <Setter Property="MaxWidth" Value="40"/>
        <Setter Property="Width" Value="40"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="btnBorder"
                            CornerRadius="20"
                            Background="{TemplateBinding Background}"
                            Width="{TemplateBinding Width}"
                            Height="{TemplateBinding MaxHeight}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True"
                            Padding="{TemplateBinding Padding}">
                        <Path x:Name="Icon" Data="{DynamicResource moon}"
                              Fill="{DynamicResource TertiaryWhiteColor}"
                              Height="16"
                              Width="16"
                              Stretch="UniformToFill"/>

                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="btnBorder" Property="Background" Value="{DynamicResource SecundaryBlueColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>

            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="ProButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource TertiaryWhiteColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryBlackColor}"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Padding" Value="12 6"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="btnBorder" CornerRadius="20"
                                Background="{TemplateBinding Background}"
                                Width="{TemplateBinding Width}"
                                
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="True"
                                Padding="{TemplateBinding Padding}">
                        <ContentPresenter x:Name="ContentPresenter" Focusable="False"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Margin="{TemplateBinding Padding}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              RecognizesAccessKey="True"/>
                        <!--<Border.Effect>
                                <DropShadowEffect ShadowDepth=".5" Direction="0"
                                                  Opacity=".3"/>
                            </Border.Effect>-->
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="btnBorder" Property="CornerRadius" Value="21"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- End: ProButtonStyle -->

    <!-- Start: Button | Minimize | Maximize | Close -->
    <Style x:Key="IconButtonsStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="Width" Value="25"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="bd" CornerRadius="5" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Path Name="ico" Data="{TemplateBinding Content}"
                              Fill="{DynamicResource PrimaryTextColor}" Height="10" Width="10" Stretch="Uniform"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource SecundaryBackgroundColor}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="Tag" Value="IsCloseButton"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="#F72626"/>
                            <Setter TargetName="ico" Property="Fill" Value="#FFFFFF"/>
                        </MultiTrigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="ico" Property="Fill" Value="{DynamicResource TertiaryTextColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Data Grid Delete | Edit Buttons -->
    <Style x:Key="FileDelete" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource PrimaryRedColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource TertiaryWhiteColor}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="4 2 4 2"/>
        <Setter Property="FontWeight" Value="Light"/>
        <Setter Property="FontFamily" Value="Poppins"/>
        <Setter Property="MaxHeight" Value="24"/>
        <Setter Property="MaxWidth" Value="24"/>
        <Setter Property="Width" Value="24"/>
        <Setter Property="Height" Value="24"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="btnBorder"
                            CornerRadius="5"
                            Background="{TemplateBinding Background}"
                            Width="{TemplateBinding Width}"
                            Height="{TemplateBinding MaxHeight}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True"
                            Padding="{TemplateBinding Padding}">
                        <Path x:Name="Icon" Data="{DynamicResource File-Delete}"
                              Fill="{DynamicResource TertiaryWhiteColor}"
                              Height="16"
                              Width="16"
                              Stretch="UniformToFill"/>

                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="btnBorder" Property="Background" Value="{DynamicResource SecundaryRedColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>

            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="FileEdit" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource PrimaryBlueColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource TertiaryWhiteColor}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="4 2 4 2"/>
        <Setter Property="FontWeight" Value="Light"/>
        <Setter Property="FontFamily" Value="Poppins"/>
        <Setter Property="MaxHeight" Value="24"/>
        <Setter Property="MaxWidth" Value="24"/>
        <Setter Property="Width" Value="24"/>
        <Setter Property="Height" Value="24"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="btnBorder"
                        CornerRadius="5"
                        Background="{TemplateBinding Background}"
                        Width="{TemplateBinding Width}"
                        Height="{TemplateBinding MaxHeight}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="True"
                        Padding="{TemplateBinding Padding}">
                        <Path x:Name="Icon" Data="{DynamicResource File-edit}"
                          Fill="{DynamicResource TertiaryWhiteColor}"
                          Height="16"
                          Width="16"
                          Stretch="UniformToFill"/>

                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="btnBorder" Property="Background" Value="{DynamicResource SecundaryBlueColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>